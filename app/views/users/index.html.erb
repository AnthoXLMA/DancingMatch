<div class ="container-map" style="height:600px; width:100%;">
<!-- <div id="resultats"
  data-users="<%= @users_selected.to_json %>">
  </div> -->
  <div id="map"
    data-markers="<%= @markers.to_json %>"
    data-mapbox-api-key="<%= ENV['MAPBOX_API_KEY'] %>">
  </div>
<!--
  <div style="width: 100%; height: 600px;"
    data-controller="map"
    data-map-markers-value="<%= @markers.to_json %>"
    data-map-api-key-value="<%= ENV['MAPBOX_API_KEY'] %>">
  </div> -->

</div>
<div class="grid-user" style="display:flex;">
  <div class="contain-user">
    <% @users.each do |i| %>
    <div class="card-community">
        <div class="image-user-card">
          <%= cl_image_tag i.photo.key if i.photo.attached? %>
        </div>
        <!-- <div class="user-details">
          <ul>
            <li><%= link_to i.first_name, user_profiles_path(i) %> <%= i.age %></li>
            <li><%= i.city %></li>
            <li><%= link_to "See More Details", user_profiles_path(i) %></li>
          </ul>
        </div> -->
    </div>
    <% end %>
  </div>
  <div class="search-motor">
    <div class="contain-3">
      <div class="card-search-types">
      <%= simple_form_for users_path, method: :get do |f| %>
        <%= text_field_tag :query, params[:query], class: "form-control", placeholder: "OÃ¹?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do |f| %>
        <input type="checkbox" name="gender_query" value="lady"        /> Lady
        <input type="checkbox" name="gender_query" value="gentleman"   /> Gentleman
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do %>
        <%= text_field_tag :name_query, params[:name_query], class: "form-control", placeholder: "Pseudo?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
  </div>

<!-- <script>

import { Controller } from "@hotwired/stimulus"
import mapboxgl from 'mapbox-gl'
import MapboxGeocoder from "@mapbox/mapbox-gl-geocoder"

// const mapElement = document.getElementById('map');
// if (mapElement) {
//   mapboxgl.accessToken = 'pk.eyJ1IjoiYW50bWFuNDMiLCJhIjoiY2x3eHk0aWF1MWY2bzJucjFodnEwemRwayJ9.O7VyKyjd4FebVbtQPuGj7g';

//   const map = new mapboxgl.Map({
//     container: 'map',
//     style: 'mapbox://styles/mapbox/streets-v12',
//     center: [2.35, 48.853],
//     zoom: 5,
//   });
// };

// Connects to data-controller="map"
export default class extends Controller {
    static values = {
    apiKey: String,
    markers: Array
  }
  connect() {
    mapboxgl.accessToken = this.apiKeyValue

    this.map = new mapboxgl.Map({
      container: this.element,
      style: "mapbox://styles/mapbox/streets-v12"
    })
    this.addMarkersToMap()
    this.fitMapToMarkers()
    this.map.addControl(
      new MapboxGeocoder({ accessToken: mapboxgl.accessToken,
      mapboxgl: mapboxgl }))
  }
};

addMarkersToMap() {
  this.markersValue.forEach((marker) => {
    const popup = new mapboxgl.Popup().setHTML(marker.info_window_html)

    const customMarker = document.createElement("div")
    customMarker.innerHTML = marker.marker_html

    new mapboxgl.Marker()
      .setLngLat([ marker.lng, marker.lat ])
      .setPopup(popup) // Add this
      .addTo(this.map)
  });
}

fitMapToMarkers() {
  const bounds = new mapboxgl.LngLatBounds()
  this.markersValue.forEach(marker => bounds.extend([ marker.lng, marker.lat ]))
  this.map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 })
}
</script>
 -->

<script>
// const initMapbox = () => {
  const mapElement = document.getElementById('map');
  if (mapElement) {
    mapboxgl.accessToken = 'pk.eyJ1IjoiYW50bWFuNDMiLCJhIjoiY2x3eHk0aWF1MWY2bzJucjFodnEwemRwayJ9.O7VyKyjd4FebVbtQPuGj7g';

    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v12',
      center: [2.35, 48.853],
      zoom: 5,
    });

    // for (const feature of geojson.features) {
    //   // create a HTML element for each feature
    //   const el = document.createElement('div');
    //   el.className = 'marker';

    //   // make a marker for each feature and add to the map
    //   new mapboxgl.Marker(el)
    //   .setLngLat(feature.geometry.coordinates)
    //   .addTo(map);
    // }
    map.on('load', () => {
    const markers = JSON.parse(mapElement.dataset.markers);
      markers.forEach((marker) => {
      const popup   = new mapboxgl.Popup().setHTML(marker.infoWindow);
      const element = document.createElement('div');
        element.className = 'marker';
        element.style.backgroundImage = `url('${marker.image_url}')`;
        element.style.backgroundSize  = 'no-repeat';
        element.style.width   = '25px';
        element.style.height  = '60px';
    // map.addImage(
      new mapboxgl.Marker(element)
      .setLngLat([marker.lng, marker.lat])
      .setPopup(popup)
      .addTo(map)
      // );
        });
      });

    // dancers_location
    // const dancers = JSON.parse(mapElement.dataset.markers);
    //   dancers.forEach((dancer) => {
    // const popup   = new mapboxgl.Popup().setHTML(dancer.infoWindow);
    // const element = document.createElement('div');
    //   element.className   = 'marker';
    //   element.style.backgroundImage = `url('${dancer.image_url}')`;
    //   element.style.backgroundSize  = 'no-repeat';
    //   element.style.width   = '25px';
    //   element.style.height  = '60px';
    // new mapboxgl.Marker(element)
    // .setLngLat([dancer.lng, dancer.lat])
    // .setPopup(popup)
    // .addTo(map);
    // });

    // events_dance_id_location
    // const events = JSON.parse(mapElement.dataset.markers);
    //   events.forEach((event) => {
    // const popup   = new mapboxgl.Popup().setHTML(event.infoWindow);
    // const element = document.createElement('div');
    //   element.className = 'marker';
    //   element.style.backgroundImage = `url('${event.image_url}')`;
    //   element.style.backgroundSize  = 'no-repeat';
    //   element.style.width   = '25px';
    //   element.style.height  = '60px';
    // new mapboxgl.Marker(element)
    // .setLngLat([event.lng, event.lat])
    // .setPopup(popup)
    // .addTo(map);
    // });

    map.addControl(
      new MapboxGeocoder({
          accessToken: mapboxgl.accessToken,
          mapboxgl: mapboxgl
      })
    );
  };
// }
// export { initMapbox } ;
</script>
</div>
