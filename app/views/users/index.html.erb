<div class ="container-map" style="height:600px; width:100%;">
<!--   <div id="resultats"
  data-users="<%= @users_selected.to_json %>">
  </div> -->
  <div id="map"
    data-dancers="<%= @dancers.to_json %>"
    data-events="<%= @events.to_json %>"
    data-salsero_position_on_map="<%= @salsero_position_on_map.to_json %>"
    data-merengue_position_on_map="<%= @merengue_position_on_map.to_json %>"
    data-bachata_position_on_map="<%= @bachata_position_on_map.to_json %>"
    data-kizomba_position_on_map="<%= @kizomba_position_on_map.to_json %>"
    data-reggaeton_position_on_map="<%= @reggaeton_position_on_map.to_json %>"
    data-samba_position_on_map="<%= @samba_position_on_map.to_json %>"
    data-tango_position_on_map="<%= @tango_position_on_map.to_json %>"
    data-flamenco_position_on_map="<%= @flamenco_position_on_map.to_json %>"
    data-jazz_position_on_map="<%= @jazz_position_on_map.to_json %>"
    data-wcs_position_on_map="<%= @wcs_position_on_map.to_json %>"
    data-break_position_on_map="<%= @break_position_on_map.to_json %>"
    data-porto_position_on_map="<%= @porto_position_on_map.to_json %>"
    data-foxtrot_position_on_map="<%= @foxtrot_position_on_map.to_json %>"
    data-lindyhop_position_on_map="<%= @lindyhop_position_on_map.to_json %>"
    data-pasodoble_position_on_map="<%= @pasodoble_position_on_map.to_json %>"
    data-milonga_position_on_map="<%= @milonga_position_on_map.to_json %>"
    data-lambada_position_on_map="<%= @lambada_position_on_map.to_json %>"
    data-forro_position_on_map="<%= @forro_position_on_map.to_json %>"
    data-rock_position_on_map="<%= @rock_position_on_map.to_json %>"
    data-tapdance_position_on_map="<%= @tapdance_position_on_map.to_json %>"
    data-chacha_position_on_map="<%= @chacha_position_on_map.to_json %>"
    data-valse_position_on_map="<%= @valse_position_on_map.to_json %>"
    data-capoeira_position_on_map="<%= @capoeira_position_on_map.to_json %>"
    data-zumba_position_on_map="<%= @zumba_position_on_map.to_json %>"
    data-poledance_position_on_map="<%= @poledance_position_on_map.to_json %>"
    data-kompa_position_on_map="<%= @kompa_position_on_map.to_json %>"
    data-zouk_position_on_map="<%= @zouk_position_on_map.to_json %>"
    data-map-api-key="<%= ENV['MAPBOX_API_KEY'] %>">
  <nav id="filter-group" class="filter-group"></nav>
  <nav id="listing-group" class="listing-group">
    <input type="checkbox" id="scrollZoom" checked="checked">
    <label for="scrollZoom">Scroll zoom</label>
    <input type="checkbox" id="boxZoom" checked="checked">
    <label for="boxZoom">Box zoom</label>
    <input type="checkbox" id="dragRotate" checked="checked">
    <label for="dragRotate">Drag rotate</label>
    <input type="checkbox" id="dragPan" checked="checked">
    <label for="dragPan">Drag pan</label>
    <input type="checkbox" id="keyboard" checked="checked">
    <label for="keyboard">Keyboard</label>
    <input type="checkbox" id="doubleClickZoom" checked="checked">
    <label for="doubleClickZoom">Double click zoom</label>
    <input type="checkbox" id="touchZoomRotate" checked="checked">
    <label for="touchZoomRotate">Touch zoom rotate</label>
</nav>

<label for="myCheck">Checkbox:</label>
<input type="checkbox" id="myCheck" onclick="myFunction()">
<p id="text" style="display:none">Checkbox is CHECKED!</p>

</div>

</div>

<div class="grid-user" style="display:flex;">
  <div class="contain-user">
    <% @users.each do |i| %>
    <div class="card-community">
        <div class="image-user-card">
          <%= cl_image_tag i.photo.key if i.photo.attached? %>
        </div>
        <!-- <div class="user-details">
          <ul>
            <li><%= link_to i.first_name, user_profiles_path(i) %> <%= i.age %></li>
            <li><%= i.city %></li>
            <li><%= link_to "See More Details", user_profiles_path(i) %></li>
          </ul>
        </div> -->
    </div>
    <% end %>
  </div>
  <div class="search-motor">
    <div class="contain-3">
      <div class="card-search-types">
      <%= simple_form_for users_path, method: :get do |f| %>
        <%= text_field_tag :query, params[:query], class: "form-control", placeholder: "OÃ¹?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do |f| %>
        <input type="checkbox" name="gender_query" value="lady"        /> Lady
        <input type="checkbox" name="gender_query" value="gentleman"   /> Gentleman
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do %>
        <%= text_field_tag :name_query, params[:name_query], class: "form-control", placeholder: "Pseudo?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
  </div>
</div>

<script>
const mapElement = document.getElementById('map');

  //DEBUT DE LA MAP ELEMENT
  if (mapElement) {

  //MAP ACCESS TOKEN
  mapboxgl.accessToken = 'pk.eyJ1IjoiYW50bWFuNDMiLCJhIjoiY2x3eHk0aWF1MWY2bzJucjFodnEwemRwayJ9.O7VyKyjd4FebVbtQPuGj7g';

  const filterGroup = document.getElementById('filter-group');
  // MAP DISPLAYING
  const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v12',
    center: [2.35, 48.853],
    zoom: 11,
  });
  //MARKERS DANCERS DISPLAYING
  const dancers = JSON.parse(mapElement.dataset.dancers);
    dancers.forEach((dancer) => {
    const popup   = new mapboxgl.Popup().setHTML(dancer.infoWindow);
    const element = document.createElement('div');
      element.className = 'icon-dancer';
      element.style.backgroundImage = `url('${dancer.image_url}')`;
      element.style.backgroundSize  = 'cover';
      element.style.width   = '30px';
      element.style.height  = '30px';
      new mapboxgl.Marker(element)
      .setLngLat([dancer.lng, dancer.lat])
      .setPopup(popup)
      .addTo(map)
    });
  // MAP LOCATION SEARCH TOOLBAR
    map.addControl(
      new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
    })
  );
  //MARKERS EVENTS DISPLAYING
  const events = JSON.parse(mapElement.dataset.events);
    events.forEach((event) => {
  const popup   = new mapboxgl.Popup().setHTML(event.infoWindow);
  const e = document.createElement('div');
    e.className = 'icon-show';
    e.style.backgroundImage = `url('${event.image_url}')`;
    e.style.backgroundSize  = 'cover';
    e.style.width   = '40px';
    e.style.height  = '40px';
  new mapboxgl.Marker(e)
  .setLngLat([event.lng, event.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const salsero_position_on_map = JSON.parse(mapElement.dataset.salsero_position_on_map);
    salsero_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'marker';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const merengue_position_on_map = JSON.parse(mapElement.dataset.merengue_position_on_map);
    merengue_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'marker';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const bachata_position_on_map = JSON.parse(mapElement.dataset.bachata_position_on_map);
    bachata_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-green.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const kizomba_position_on_map = JSON.parse(mapElement.dataset.kizomba_position_on_map);
    kizomba_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-red.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const reggaeton_position_on_map = JSON.parse(mapElement.dataset.reggaeton_position_on_map);
    reggaeton_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-gray.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const samba_position_on_map = JSON.parse(mapElement.dataset.samba_position_on_map);
    samba_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const tango_position_on_map = JSON.parse(mapElement.dataset.tango_position_on_map);
    tango_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const flamenco_position_on_map = JSON.parse(mapElement.dataset.flamenco_position_on_map);
    flamenco_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const jazz_position_on_map = JSON.parse(mapElement.dataset.jazz_position_on_map);
    jazz_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const wcs_position_on_map = JSON.parse(mapElement.dataset.wcs_position_on_map);
    wcs_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const break_position_on_map = JSON.parse(mapElement.dataset.break_position_on_map);
    break_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const porto_position_on_map = JSON.parse(mapElement.dataset.porto_position_on_map);
    porto_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const foxtrot_position_on_map = JSON.parse(mapElement.dataset.foxtrot_position_on_map);
    foxtrot_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const lindyhop_position_on_map = JSON.parse(mapElement.dataset.lindyhop_position_on_map);
    lindyhop_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const pasodoble_position_on_map = JSON.parse(mapElement.dataset.pasodoble_position_on_map);
    pasodoble_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const milonga_position_on_map = JSON.parse(mapElement.dataset.milonga_position_on_map);
    milonga_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const lambada_position_on_map = JSON.parse(mapElement.dataset.lambada_position_on_map);
    lambada_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const forro_position_on_map = JSON.parse(mapElement.dataset.forro_position_on_map);
    forro_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const rock_position_on_map = JSON.parse(mapElement.dataset.rock_position_on_map);
    rock_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const tapdance_position_on_map = JSON.parse(mapElement.dataset.tapdance_position_on_map);
    tapdance_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const chacha_position_on_map = JSON.parse(mapElement.dataset.chacha_position_on_map);
    chacha_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const valse_position_on_map = JSON.parse(mapElement.dataset.valse_position_on_map);
    valse_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const capoeira_position_on_map = JSON.parse(mapElement.dataset.capoeira_position_on_map);
    capoeira_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const zumba_position_on_map = JSON.parse(mapElement.dataset.zumba_position_on_map);
    zumba_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const poledance_position_on_map = JSON.parse(mapElement.dataset.poledance_position_on_map);
    poledance_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const kompa_position_on_map = JSON.parse(mapElement.dataset.kompa_position_on_map);
    kompa_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const zouk_position_on_map = JSON.parse(mapElement.dataset.zouk_position_on_map);
    zouk_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'mapbox-marker-icon-blue.svg';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

    const dances = {
        'type': 'FeatureCollection',
        'features': [
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.038659, 38.931567]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.003168, 38.894651]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bar'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.090372, 38.881189]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bicycle'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.052477, 38.943951]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.031706, 38.914581]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.020945, 38.878241]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.007481, 38.876516]
                }
            }
        ]
    };


  map.on('load', () => {
        // Add a GeoJSON source containing place coordinates and information.
        map.addSource(dances, {
            'type': 'geojson',
            'data': dances
        });

        for (const feature of dances.features) {
            const symbol = feature.properties.icon;
            const layerID = `poi-${symbol}`;

            // Add a layer for this symbol type if it hasn't been added already.
            if (!map.getLayer(layerID)) {
                map.addLayer({
                    'id': layerID,
                    'type': 'symbol',
                    'source': 'dances',
                    'layout': {
                        // These icons are a part of the Mapbox Light style.
                        // To view all images available in a Mapbox style, open
                        // the style in Mapbox Studio and click the "Images" tab.
                        // To add a new image to the style at runtime see
                        // https://docs.mapbox.com/mapbox-gl-js/example/add-image/
                        'icon-image': `${symbol}`,
                        'icon-allow-overlap': true
                    },
                    'filter': ['==', 'icon', symbol]
                });

                // Add checkbox and label elements for the layer.
                const input = document.createElement('input');
                input.type = 'checkbox';
                input.id = layerID;
                input.checked = true;
                filterGroup.appendChild(input);

                const label = document.createElement('label');
                label.setAttribute('for', layerID);
                label.textContent = symbol;
                filterGroup.appendChild(label);

                // When the checkbox changes, update the visibility of the layer.
                input.addEventListener('change', (e) => {
                    map.setLayoutProperty(
                        layerID,
                        'visibility',
                        e.target.checked ? 'visible' : 'none'
                    );
                });
            }
        }
    });
// FIN DE LA MAP ELEMENT
};
</script>

