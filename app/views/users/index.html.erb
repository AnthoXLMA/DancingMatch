<div class ="container-map" style="height:600px; width:100%;">
<!--   <div id="resultats"
  data-users="<%= @users_selected.to_json %>">
  </div> -->
  <div id="map"
    data-dancers="<%= @dancers.to_json %>"
    data-events="<%= @events.to_json %>"
    data-salsero_position_on_map  ="<%= @salsero_position_on_map.to_json %>"
    data-merengue_position_on_map ="<%= @merengue_position_on_map.to_json %>"
    data-bachata_position_on_map  ="<%= @bachata_position_on_map.to_json %>"
    data-kizomba_position_on_map  ="<%= @kizomba_position_on_map.to_json %>"
    data-reggaeton_position_on_map="<%= @reggaeton_position_on_map.to_json %>"
    data-samba_position_on_map    ="<%= @samba_position_on_map.to_json %>"
    data-tango_position_on_map    ="<%= @tango_position_on_map.to_json %>"
    data-flamenco_position_on_map ="<%= @flamenco_position_on_map.to_json %>"
    data-jazz_position_on_map     ="<%= @jazz_position_on_map.to_json %>"
    data-wcs_position_on_map      ="<%= @wcs_position_on_map.to_json %>"
    data-break_position_on_map    ="<%= @break_position_on_map.to_json %>"
    data-porto_position_on_map    ="<%= @porto_position_on_map.to_json %>"
    data-foxtrot_position_on_map  ="<%= @foxtrot_position_on_map.to_json %>"
    data-lindyhop_position_on_map ="<%= @lindyhop_position_on_map.to_json %>"
    data-pasodoble_position_on_map="<%= @pasodoble_position_on_map.to_json %>"
    data-milonga_position_on_map  ="<%= @milonga_position_on_map.to_json %>"
    data-lambada_position_on_map  ="<%= @lambada_position_on_map.to_json %>"
    data-forro_position_on_map    ="<%= @forro_position_on_map.to_json %>"
    data-rock_position_on_map     ="<%= @rock_position_on_map.to_json %>"
    data-tapdance_position_on_map ="<%= @tapdance_position_on_map.to_json %>"
    data-chacha_position_on_map   ="<%= @chacha_position_on_map.to_json %>"
    data-valse_position_on_map    ="<%= @valse_position_on_map.to_json %>"
    data-capoeira_position_on_map ="<%= @capoeira_position_on_map.to_json %>"
    data-zumba_position_on_map    ="<%= @zumba_position_on_map.to_json %>"
    data-poledance_position_on_map="<%= @poledance_position_on_map.to_json %>"
    data-kompa_position_on_map    ="<%= @kompa_position_on_map.to_json %>"
    data-zouk_position_on_map     ="<%= @zouk_position_on_map.to_json %>"
    data-map-api-key              ="<%= ENV['MAPBOX_API_KEY'] %>">

  <nav id="filter-group" class="filter-group"></nav>

  </div>

<div class="wrapper">
  <div class="filter-wrapper">
<h3>Filter those markers: </h3>
<p><button type="button" class="js-check-all active"> All</button></p>
<div class="check-filters">
  <label><input type="checkbox" value="fish" checked> Fish</label>
  <label><input type="checkbox" value="cat" checked> Cat</label>
  <label><input type="checkbox" value="dog" checked> Dog</label>
</div>

<div class="grid-user" style="display:flex;">
  <div class="contain-user">
    <% @users.each do |i| %>
    <div class="card-community">
        <div class="image-user-card">
          <%= cl_image_tag i.photo.key if i.photo.attached? %>
        </div>
        <!-- <div class="user-details">
          <ul>
            <li><%= link_to i.first_name, user_profiles_path(i) %> <%= i.age %></li>
            <li><%= i.city %></li>
            <li><%= link_to "See More Details", user_profiles_path(i) %></li>
          </ul>
        </div> -->
    </div>
  <% end %>
  </div>
  <div class="search-motor">
    <div class="contain-3">
      <div class="card-search-types">
      <%= simple_form_for users_path, method: :get do |f| %>
        <%= text_field_tag :query, params[:query], class: "form-control", placeholder: "OÃ¹?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do |f| %>
        <input type="checkbox" name="gender_query" value="lady"        /> Lady
        <input type="checkbox" name="gender_query" value="gentleman"   /> Gentleman
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
    <div class="contain-3">
      <div class="card-search-types">
        <%= simple_form_for users_path, method: :get do %>
        <%= text_field_tag :name_query, params[:name_query], class: "form-control", placeholder: "Pseudo?" %>
        <%= submit_tag "Search", class: "btn btn-primary" %>
      <% end %>
      </div>
    </div>
  </div>
</div>

<script>
const mapElement = document.getElementById('map');
  //DEBUT DE LA MAP ELEMENT
  if (mapElement) {
    const places = {
        'type': 'FeatureCollection',
        'features': [
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.35, 47.853]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.35, 50.853]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bar'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.30, 48.893]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bicycle'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.25, 47.853]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.20, 46.853]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.35, 48.853]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [2.35, 48.853]
                }
            }
        ]
    };

  const filterGroup = document.getElementById('filter-group');
  //MAP ACCESS TOKEN
  mapboxgl.accessToken = 'pk.eyJ1IjoiYW50bWFuNDMiLCJhIjoiY2x3eHk0aWF1MWY2bzJucjFodnEwemRwayJ9.O7VyKyjd4FebVbtQPuGj7g';
  // MAP DISPLAYING
  const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v12',
    center: [2.35, 48.853],
    zoom: 11,
  });

      //MARKERS DANCERS DISPLAYING
    const dancers = JSON.parse(mapElement.dataset.dancers);
    dancers.forEach((dancer) => {
    const popup   = new mapboxgl.Popup().setHTML(dancer.infoWindow);
    const element = document.createElement('div');
      element.className = 'icon-dancer';
      element.style.backgroundImage = `url('${dancer.image_url}')`;
      element.style.backgroundSize  = 'cover';
      element.style.width   = '30px';
      element.style.height  = '30px';
      new mapboxgl.Marker(element)
      .setLngLat([dancer.lng, dancer.lat])
      .setPopup(popup)
      .addTo(map)
    });
  // MAP LOCATION SEARCH TOOLBAR
    map.addControl(
      new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
    })
  );
  map.on('load', () => {
        // Add a GeoJSON source containing place coordinates and information.
        map.addSource('dancers', {
            'type': 'geojson',
            'data': dancers
        });

        for (const feature of dancers.features) {
            const symbol = feature.properties.icon;
            const layerID = `poi-${symbol}`;

            // Add a layer for this symbol type if it hasn't been added already.
            if (!map.getLayer(layerID)) {
                map.addLayer({
                    'id': layerID,
                    'type': 'symbol',
                    'source': 'dancers',
                    'layout': {
                        // These icons are a part of the Mapbox Light style.
                        // To view all images available in a Mapbox style, open
                        // the style in Mapbox Studio and click the "Images" tab.
                        // To add a new image to the style at runtime see
                        // https://docs.mapbox.com/mapbox-gl-js/example/add-image/
                        'icon-image': `${symbol}`,
                        'icon-allow-overlap': true
                    },
                    'filter': ['==', 'icon', symbol]
                });

                // Add checkbox and label elements for the layer.
                const input = document.createElement('input');
                input.type = 'checkbox';
                input.id = layerID;
                input.checked = true;
                filterGroup.appendChild(input);

                const label = document.createElement('label');
                label.setAttribute('for', layerID);
                label.textContent = symbol;
                filterGroup.appendChild(label);

                // When the checkbox changes, update the visibility of the layer.
                input.addEventListener('change', (e) => {
                    map.setLayoutProperty(
                        layerID,
                        'visibility',
                        e.target.checked ? 'visible' : 'none'
                    );
                });
            }
        }
    });

var jsonStringify = JSON.stringify(json)
var jsonParse = JSON.parse(jsonStringify);

var markers = [];
var markerCluster;
var filterSelect = jQuery('.filter');

var filters;

//creation de la map
function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 6,
      center: new google.maps.LatLng(45.882360730184025, 2.57080078125)
    });

    for (var i = 0; i < json.length; i++){
        setMarkers(json[i], map);
    }

    markerCluster = new MarkerClusterer(map, markers, {ignoreHiddenMarkers: true, imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
}

function setMarkers(marker, map) {
    var markerMap = marker.geometry.coordinates;
    var title = marker.title;
    var animal = marker.animal;
    var drink = marker.drink;
    var name = marker.name;
    var pos = new google.maps.LatLng(markerMap[1], markerMap[0]);
    var content = marker;

    markerMap = new google.maps.Marker({
        position: pos,
        title: title,
        animal: animal,
        drink: drink,
        name: name,
        map: map
    });

    markers.push(markerMap);

    var infowindow = new google.maps.InfoWindow({
        content: title + '<br/>' + animal + '<br/>' + drink + '<br/>' + name
    });

    // Marker click listener
    google.maps.event.addListener(markerMap, 'click', (function (marker1, content) {
        return function () {
            infowindow.setContent(content);
            infowindow.open(map, markerMap);
            map.panTo(this.getPosition());
            // map.setZoom(15);
        }
    })(markerMap, content));
}

function clusterManager(array) {
    markerCluster.clearMarkers();

    for (i=0; i < array.length; i++) {
      markerCluster.addMarker(array[i]);
    }
}

//@todo add inputsearch
function newFilter() {

    var filteredMarkers = [];

    $.each(markers, function(index, marker) { // on parcourt les markers
      //console.log('maker ', index);

      $.each(filters, function(i, categoryFilter) { // on parcourt les diffÃ©rentes catÃ©gories prÃ©sentes dans les filtres
        if (marker.animal == categoryFilter) {//si le marker est l'une des categories, on l'ajoute au filteredMarkers
          filteredMarkers.push(marker);
        }
      });
    });
  //console.log('filteredMarkers : ',filteredMarkers);

    clusterManager(filteredMarkers);
}




$(document).ready(function() {


  $('.check-filters input').on('change', function(){
    filters = [];
    $('.check-filters input:checked').each(function(index, elem) {
      filters.push($(elem).val());
    });
    newFilter(filters);
    //console.log('filters selected : ', filters);

    //si tous les filtres sont cochÃ©s
    if($('.check-filters input').length == $('.check-filters input:checked').length) {
      //console.log('tous les filtres sont cochÃ©s', );
      $('.js-check-all').addClass('active');
    } else {
      //console.log('Pas tous cochÃ©s');
      $('.js-check-all').removeClass('active');
    }
  });

  $('.js-check-all').on('click', function(e){
    var $obj = $(e.currentTarget);
    $obj.addClass('active');
    $('.check-filters input').prop('checked', 'true').first().change();
  });

});


jQuery(window).on('load', function(){
    initMap();
});

  //MARKERS EVENTS DISPLAYING
  const events = JSON.parse(mapElement.dataset.events);
    events.forEach((event) => {
  const popup   = new mapboxgl.Popup().setHTML(event.infoWindow);
  const e = document.createElement('div');
    e.className = 'icon-show';
    e.style.backgroundImage = `url('${event.image_url}')`;
    e.style.backgroundSize  = 'cover';
    e.style.width   = '40px';
    e.style.height  = '40px';
  new mapboxgl.Marker(e)
  .setLngLat([event.lng, event.lat])
  .setPopup(popup)
  .addTo(map);
  });

  const salsero_position_on_map = JSON.parse(mapElement.dataset.salsero_position_on_map);
    salsero_position_on_map.forEach((s) => {
  const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  const u = document.createElement('div');
    u.className = 'marker';
    u.style.backgroundImage = `url('${s.image_url}')`;
    u.style.backgroundSize  = 'cover';
    u.style.width   = '15px';
    u.style.height  = '20px'
  new mapboxgl.Marker(u)
  .setLngLat([s.lng, s.lat])
  .setPopup(popup)
  .addTo(map);
  });

  // const merengue_position_on_map = JSON.parse(mapElement.dataset.merengue_position_on_map);
  //   merengue_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'marker';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const bachata_position_on_map = JSON.parse(mapElement.dataset.bachata_position_on_map);
  //   bachata_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-green.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const kizomba_position_on_map = JSON.parse(mapElement.dataset.kizomba_position_on_map);
  //   kizomba_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-red.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const reggaeton_position_on_map = JSON.parse(mapElement.dataset.reggaeton_position_on_map);
  //   reggaeton_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-gray.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const samba_position_on_map = JSON.parse(mapElement.dataset.samba_position_on_map);
  //   samba_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const tango_position_on_map = JSON.parse(mapElement.dataset.tango_position_on_map);
  //   tango_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const flamenco_position_on_map = JSON.parse(mapElement.dataset.flamenco_position_on_map);
  //   flamenco_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const jazz_position_on_map = JSON.parse(mapElement.dataset.jazz_position_on_map);
  //   jazz_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const wcs_position_on_map = JSON.parse(mapElement.dataset.wcs_position_on_map);
  //   wcs_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const break_position_on_map = JSON.parse(mapElement.dataset.break_position_on_map);
  //   break_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const porto_position_on_map = JSON.parse(mapElement.dataset.porto_position_on_map);
  //   porto_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const foxtrot_position_on_map = JSON.parse(mapElement.dataset.foxtrot_position_on_map);
  //   foxtrot_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const lindyhop_position_on_map = JSON.parse(mapElement.dataset.lindyhop_position_on_map);
  //   lindyhop_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const pasodoble_position_on_map = JSON.parse(mapElement.dataset.pasodoble_position_on_map);
  //   pasodoble_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const milonga_position_on_map = JSON.parse(mapElement.dataset.milonga_position_on_map);
  //   milonga_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const lambada_position_on_map = JSON.parse(mapElement.dataset.lambada_position_on_map);
  //   lambada_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const forro_position_on_map = JSON.parse(mapElement.dataset.forro_position_on_map);
  //   forro_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const rock_position_on_map = JSON.parse(mapElement.dataset.rock_position_on_map);
  //   rock_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const tapdance_position_on_map = JSON.parse(mapElement.dataset.tapdance_position_on_map);
  //   tapdance_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const chacha_position_on_map = JSON.parse(mapElement.dataset.chacha_position_on_map);
  //   chacha_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const valse_position_on_map = JSON.parse(mapElement.dataset.valse_position_on_map);
  //   valse_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const capoeira_position_on_map = JSON.parse(mapElement.dataset.capoeira_position_on_map);
  //   capoeira_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const zumba_position_on_map = JSON.parse(mapElement.dataset.zumba_position_on_map);
  //   zumba_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const poledance_position_on_map = JSON.parse(mapElement.dataset.poledance_position_on_map);
  //   poledance_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const kompa_position_on_map = JSON.parse(mapElement.dataset.kompa_position_on_map);
  //   kompa_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

  // const zouk_position_on_map = JSON.parse(mapElement.dataset.zouk_position_on_map);
  //   zouk_position_on_map.forEach((s) => {
  // const popup   = new mapboxgl.Popup().setHTML(s.infoWindow);
  // const u = document.createElement('div');
  //   u.className = 'mapbox-marker-icon-blue.svg';
  //   u.style.backgroundImage = `url('${s.image_url}')`;
  //   u.style.backgroundSize  = 'cover';
  //   u.style.width   = '15px';
  //   u.style.height  = '20px'
  // new mapboxgl.Marker(u)
  // .setLngLat([s.lng, s.lat])
  // .setPopup(popup)
  // .addTo(map);
  // });

// FIN DE LA MAP ELEMENT
};
</script>

